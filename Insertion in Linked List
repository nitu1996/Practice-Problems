#include <iostream>
#include<cstdlib>

using namespace std;

// To create the node
struct Node
{
	int data;
	struct Node *next;
};

//Function to insert the node at start of list
struct Node * insertatfirst(struct Node *head,int data)
{
	struct Node *ptr=(struct Node *)malloc(sizeof(struct Node));
	ptr->next=head;
	ptr->data=data;
	return ptr;
}

//Function to insert nod at the given index
struct Node * insertatindex(struct Node *head,int data,int index)
{
	struct Node *ptr = (struct Node *)malloc(sizeof(struct Node));
	struct Node *p = head;
	int i= 0;
	while(i!=index-1)
	{
		p=p->next;
		i++;
	}
	ptr->data= data;
	ptr->next = p->next;
	p->next = ptr;
	return head;
}

//Function to inserty the node at the end of the linked list
struct Node * insertatend(struct Node *head,int data)
{
	struct Node *ptr = (struct Node *)malloc(sizeof(struct Node));
	struct Node *p = head;
	ptr->data=data;
	while(p->next!=NULL)
	{
		p=p->next;
	}
	p->next = ptr;
	ptr->next = NULL;
	return head;	
}

//Function to trevesre through the list
void LinkedListTreversal(struct Node *ptr)
{
	while(ptr!=NULL)
	{
	cout<<ptr->data<<endl;
	ptr=ptr->next;
	}
}


int main()
{
	struct Node *head;
	struct Node *second;
	struct Node *third;
	struct Node *fourth;
	
	head = (struct Node *)malloc(sizeof(struct Node));
	second = (struct Node *)malloc(sizeof(struct Node));
	third = (struct Node *)malloc(sizeof(struct Node));
	fourth = (struct Node *)malloc(sizeof(struct Node));
	
	head->data=11;
	head->next=second;
	
	second->data=44;
	second->next=third;
	
	third->data=55;
	third->next=fourth;
	
	fourth->data=99;
	fourth->next=NULL;
	
	
	// Calling the above functions
	
	
	LinkedListTreversal(head);
	//head=insertatfirst(head,56);
	//head = insertatindex(head,56,1);
	//head= insertatend(head,59);
	//LinkedListTreversal(head);
	return 0;
}
